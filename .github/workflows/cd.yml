name: CD Pipeline - Release

on:
  release:
    types: [published]
  workflow_dispatch:  # Manual trigger

jobs:
  test-and-build:
    name: Test and Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run tests with coverage
      run: |
        python -m pytest tests/ -v --cov=src --cov-fail-under=80

    - name: Build package
      run: |
        pip install build
        python -m build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-package
        path: dist/

  deploy-docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: test-and-build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Generate documentation
      run: |
        pip install pdoc
        pdoc -o docs/ src/

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.event_name == 'release'
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: release-package

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          *.whl
          *.tar.gz
        body: |
          ## Inventory Management System v${{ github.ref_name }}
          
          ### ðŸš€ New Features
          - Sprint 1: Product Management Complete
          - Add, view, update, and delete products
          - Stock management and alerts
          
          ### ðŸ“¦ Installation
          ```bash
          pip install inventory-management-system
          ```
          
          ### ðŸ§ª Testing
          - 100% test coverage for core features
          - Automated CI/CD pipeline